---
--- Generated by EBGAME
--- Created by lwn.
--- DateTime: 2022/01/24 11:27:04
---

---@class BasePanel BasePanel
---@field Open fun(self:BasePanel,mode:string):AsyncTask
---@field Hide fun(self:BasePanel):AsyncTask
---@field Close fun(self:BasePanel):AsyncTask
local P = classL("BasePanel")
function P:ctor(prefab, behavior, open, close)
    self.prefab = prefab
    self.behavior = behavior
    self.open = open
    self.close = close
end

---@param self BasePanel
P.Open = async(function(self, mode)
    mode = mode or "Normal"
    if self.open then
        return await(self:open(mode))
    else
        local p = TaskUI.Get(self.prefab)
        if not p then
            p = await(TaskUI.Show(self.prefab, mode))
            ---@type UnityEngine.CanvasGroup
            local cg = p:GetComponent(typeof(CanvasGroup))
            if not UnityBridge.IsNull(cg) then
                cg.alpha = 0
                await(cg:DOFade(1, 0.3))
            end
        else
            ---@type UnityEngine.CanvasGroup
            local cg = p:GetComponent(typeof(CanvasGroup))
            if not UnityBridge.IsNull(cg) and cg.alpha == 0 then
                cg.alpha = 0
                await(cg:DOFade(1, 0.3))
            end
        end
        p:SetActive(true)
        if self.behavior then
            local b = p:GetLuaBehaviour(self.behavior)
            if b then
                await(b.endOfStart)
            end
            return b
        else
            return p
        end
    end
end)

---@return UnityEngine.GameObject
function P:Get()
    return TaskUI.Get(self.prefab)
end

function P:GetBehavior()
    return self.behavior
end

P.Close = async(function(self)
    if self.close then
        await(self:close())
    else
        local p = TaskUI.Get(self.prefab)
        if p then
            ---@type UnityEngine.CanvasGroup
            local cg = p:GetComponent(typeof(CanvasGroup))
            if not UnityBridge.IsNull(cg) then
                await(cg:DOFade(0, 0.3))
            end
        end
        TaskUI.Close(self.prefab)
    end
end)

P.Hide = async(function(self)
    local p = TaskUI.Get(self.prefab)
    if p then
        ---@type UnityEngine.CanvasGroup
        local cg = p:GetComponent(typeof(CanvasGroup))
        if not UnityBridge.IsNull(cg) then
            await(cg:DOFade(0, 0.3))
        end
    end
    TaskUI.Hide(self.prefab)
end)

---@class UIPanel:BasePanel UIPanel
---======================== 面板变量 ========================
---=========================================================

local uiPanel = classL("UIPanel")


--uiPanel.UIUIDPanel = P("Assets/_DynamicAssets/Player/UI/UIUIDPanel.prefab", "Runtime.UI.Player.UIUIDPanel")
--endregion
UIPanel = uiPanel()