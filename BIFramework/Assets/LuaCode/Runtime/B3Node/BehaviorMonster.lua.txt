---
--- Generated by EBGAME
--- Created by wbn.
--- DateTime: 2021/09/23 03:49:23
---

---@class BehaviorMonster BehaviorMonster
---@field Base Monster 数据对象
---@field Enmity table 仇恨列表
---@field HitFlag boolean 受击判定
---@field VoiceFlag boolean 声音判定
---@field VoiceVolume number 声音音量
---======================== 面板变量 ========================
---@field private character Role.RoleMonster
---@field private aiCharacter AICharacter
---@field private behaviorID string
---@field rolePopup UIRolePopup
---=========================================================
local BehaviorMonster = class("BehaviorMonster", target)

--region ===================== 扩展的数据类型 =====================
--- 放自定义的结构体、枚举等

--endregion

--region ======================== 基类成员 ========================

---仇恨队列
function BehaviorMonster.Get:Enmity()
    return self._env.enmity
end
function BehaviorMonster.Set:Enmity(value)
    ---@private
    self._env.enmity = value
end

---受击flag
function BehaviorMonster.Get:HitFlag()
    return self._env.hitFlag
end
function BehaviorMonster.Set:HitFlag(value)
    ---@private
    self._env.hitFlag = value
end

---声音flag
function BehaviorMonster.Get:VoiceFlag()
    return self._env.voiceFlag
end
function BehaviorMonster.Set:VoiceFlag(value)
    ---@private
    self._env.voiceFlag = value
end

---声量
function BehaviorMonster.Get:VoiceVolume()
    return self._env.voiceVolume
end
function BehaviorMonster.Set:VoiceVolume(value)
    ---@private
    self._env.voiceVolume = value
end

---@private
---@type Monster
BehaviorMonster._base = {}
function BehaviorMonster.Get:Base()
    return self._base
end
function BehaviorMonster.Set:Base(value)
    ---@private
    self._base = value
end

---@private
BehaviorMonster._ctx = {}
---@private
BehaviorMonster._btree = {}
---@private
BehaviorMonster._env = unmanaged
---@private
---@type Vector3
BehaviorMonster._position = unmanaged


--endregion

--region ======================== 基类方法 ========================

---@param self BehaviorMonster
---@return AsyncTask void
BehaviorMonster.CreateBehavior = async(function(self)
    Debug.Log("[CreateBehavior] Monster: id = {1}, cid = {2}, gid = {3}, bid = {4}", self._base.ID, self._base.CID, self._base.GID, self.behaviorID)
    local ctx = {
        time = os.time(),
    }

    local env = {
        ctx = ctx,
        rolePopup = self.rolePopup,
        target = self._target,
        tick = 0,
        enmity = {},
        hitFlag = false,
        voiceFlag = false,
        voiceVolume = 0,
        owner = self._base,--自身实体
        origin = self._position,--原始位置
        targetPosition = nil,--当前移动目标
        targetPriority = nil,--当前移动优先度
    }

    ---@private
    self._btree = await(BehaviorTree.new(self.behaviorID, env))
    self._env = self._btree.env
end)

function BehaviorMonster:Cancel()
    if self._env then
        ---@private
        self._env = nil
    end
end

---SetParams
---@param base table 本体实例
---@param position table 初始位置
function BehaviorMonster:SetParams(base, position)
    ---@private
    self._base = base
    ---@private
    self._position = position
end

function BehaviorMonster:IsRunning()
    return self._env ~= nil
end

---@param velocity Vector3
function BehaviorMonster:SetExtraForce(velocity)
    self.character.extraVelocity = velocity
end

--endregion

--region ======================== Mono接口 ========================

-----@private
--function BehaviorMonster:Awake()
--
--end

-----@private
--function BehaviorMonster:Start()
--
--end

---@private
function BehaviorMonster:OnDestroy()
    if GlobalSO.playMode == CS.GlobalSO.PlayModeEnum.ADVENTURE or GlobalSO.playMode == CS.GlobalSO.PlayModeEnum.BUILD_RUN then
        self:Cancel()
    end
end

-----@private
--function BehaviorMonster:OnDisable()
--    
--end

-----@private
--function BehaviorMonster:OnEnable()
--    
--end

---@private
function BehaviorMonster:Update()
    if not self._env then
        return
    end

    self._env.ctx.time = os.time()
    self._btree:run()
end

--endregion

return BehaviorMonster