---
--- Generated by EBGAME
--- Created by wbn.
--- DateTime: 2022/07/28 03:56:11
---

---@class AsyncAwait : UnityEngine.MonoBehaviour AsyncAwait
---======================== 面板变量 ========================
---@field public sphere UnityEngine.GameObject
---=========================================================
local AsyncAwait = class("AsyncAwait", target)

--region ===================== 扩展的数据类型 =====================
--- 放自定义的结构体、枚举等

--endregion

--region ======================== 基类成员 ========================

--endregion

--region ======================== 基类方法 ========================

--endregion

--region ======================== Mono接口 ========================

-----@private
--function AsyncAwait:Awake()
--
--end

AsyncAwait.ReadFileTask = async(function(path)
    return await(File.ReadAllTextAsync(path))
end)

AsyncAwait.AddressableTask = async(function(path)
    local result = await(Addressable.LoadAssetAsync(typeof(TextAsset), path))
    return result.text
end)

AsyncAwait.WaitTask = async(function()
    Debug.Log("Wait 3 sec")
    await(UniTask.Delay(3000))
    Debug.Log("Wait end")
end)

---@private
---启动async协程 注意只能是Start有async
---@param self AsyncAwait
AsyncAwait.Start = async(function(self)
    local localFile = Application.dataPath .. "/__Scenes.meta"
    local results = awaitAll(self.ReadFileTask(localFile), self.AddressableTask("Assets/_DynamicAssets/Configs/BattleChapter.json"), self.WaitTask())
    for _, v in pairs(results) do
        Debug.Log(v)
    end
    await(UniTask.Delay(1000))
    Debug.Log("等了1s")

    Debug.Log("开始等1帧测试")
    Debug.Log(DateTime.Now.Ticks)
    await(UniTask.WaitForEndOfFrame(self))
    Debug.Log(DateTime.Now.Ticks)

    Debug.Log("DOTween test")
    await(self.sphere.transform:DOMove(Vector3(1, 1, 1), 1))
    await(self.sphere.transform:DOMove(Vector3(-1, -1, -1), 1))
    await(self.sphere.transform:DOMove(Vector3(2, 2, 2), 1))
    Debug.Log("DOTween over")
end)

-----@private
--function AsyncAwait:OnDestroy()
--    
--end

-----@private
--function AsyncAwait:OnDisable()
--    
--end

-----@private
--function AsyncAwait:OnEnable()
--    
--end

-----@private
--function AsyncAwait:Update()
--    
--end

--endregion

return AsyncAwait